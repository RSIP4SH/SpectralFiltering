function result=frequencyFilter(f,Hp)
[M, N]= size(f);
% =========================================================================
% zeros padding,such as [256,256]->[512,512]
% =========================================================================
P = 2*M; Q = 2*N;
fp = zeros(P,Q);
fp(1:M, 1:N) = f;
% =========================================================================
% FFT+频谱中心化
% =========================================================================
Fp = fftshift(fft2(fp));
%Fp = fftshift(fft2(double(f),P,Q)); 利用FFT自动补零

Gp = Hp .* Fp;

% 反中心化+傅立叶反变换
gp = real(ifft2(ifftshift(Gp)));

% 扩大图像中截取需要的部分
gpi = gp(1:M, 1:N);
result=uint8(gpi);